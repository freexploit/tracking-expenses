-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Expenses.Scalar exposing (Codecs, Date(..), Numeric(..), Uuid(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Date
    = Date String


type Numeric
    = Numeric String


type Uuid
    = Uuid String


defineCodecs :
    { codecDate : Codec valueDate
    , codecNumeric : Codec valueNumeric
    , codecUuid : Codec valueUuid
    }
    -> Codecs valueDate valueNumeric valueUuid
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueDate valueNumeric valueUuid
    ->
        { codecDate : Codec valueDate
        , codecNumeric : Codec valueNumeric
        , codecUuid : Codec valueUuid
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder :
    (RawCodecs valueDate valueNumeric valueUuid -> Codec getterValue)
    -> Codecs valueDate valueNumeric valueUuid
    -> getterValue
    -> Graphql.Internal.Encode.Value
unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueDate valueNumeric valueUuid
    = Codecs (RawCodecs valueDate valueNumeric valueUuid)


type alias RawCodecs valueDate valueNumeric valueUuid =
    { codecDate : Codec valueDate
    , codecNumeric : Codec valueNumeric
    , codecUuid : Codec valueUuid
    }


defaultCodecs : RawCodecs Date Numeric Uuid
defaultCodecs =
    { codecDate =
        { encoder = \(Date raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Date
        }
    , codecNumeric =
        { encoder = \(Numeric raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Numeric
        }
    , codecUuid =
        { encoder = \(Uuid raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Uuid
        }
    }
